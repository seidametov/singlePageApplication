{"version":3,"sources":["../app/app.js","../app/mainPage/MainPageCtrl.js","../app/services/ConvertTimeService.js","../app/services/TasksService.js","../app/taskPage/TaskPageCtrl.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["/**\r\n * Created by AlexS on 15.08.2015.\r\n */\r\n'use strict';\r\nangular\r\n    .module('singlePageApplication', [\r\n        'ngRoute'\r\n    ])\r\n    .config(['$routeProvider', function ($routeProvider) {\r\n        $routeProvider\r\n            .when('/', {\r\n                templateUrl: 'mainPage/mainPage.html',\r\n                controller: 'MainPageCtrl'\r\n            })\r\n            .when('/task/:taskId', {\r\n                templateUrl: 'taskPage/taskPage.html',\r\n                controller: 'TaskPageCtrl'\r\n            })\r\n            .otherwise({redirectTo: '/'});\r\n    }]);","///**\r\n// * Created by AlexS on 15.08.2015.\r\n// */\r\nangular.module('singlePageApplication')\r\n    .controller('MainPageCtrl', function ($scope, $http,\r\n                                          TasksService, ConvertTimeService) {\r\n        $scope.myStorage = null;\r\n\r\n\r\n        //$scope.getTime = ConvertTimeService.getTime;\r\n\r\n        (function init() {\r\n            TasksService.getAllTasks()\r\n                .then(function (data) {\r\n                    //$scope.myStorage = data.data;\r\n                    $scope.myStorage = _.map(data.data, function (task) {\r\n                        task.actual_effort = ConvertTimeService.getTime(task.actual_effort);\r\n                        task.estimated_effort = ConvertTimeService.getTime(task.estimated_effort);\r\n\r\n                        return task;\r\n                    });\r\n                });\r\n        })();\r\n    });\r\n\r\n","/**\r\n * Created by AlexS on 17.08.2015.\r\n */\r\nangular\r\n    .module('singlePageApplication')\r\n    .service('ConvertTimeService', function () {\r\n\r\n        function addPrefix (str) {\r\n            if (str.length < 2) {\r\n                str = '0'+str;\r\n            }\r\n            return str;\r\n        }\r\n\r\n        function addPostfix (str) {\r\n            if (str.length < 2) {\r\n                str = str + '0';\r\n            }\r\n            return str;\r\n        }\r\n\r\n        function convertStr(str, where) {\r\n            // 0- prefix, 1 - postfix\r\n            if (typeof str === 'undefined') {\r\n                return '00';\r\n            }\r\n\r\n            if (where) {\r\n                str = addPostfix(str);\r\n            } else {\r\n                str= addPrefix(str);\r\n            }\r\n\r\n            return str;\r\n        }\r\n\r\n        function getTime(time) {\r\n            var splittedStr = [], hh, mm;\r\n\r\n            if (typeof time === 'undefined' || time === null) {\r\n                return '00:00';\r\n            }\r\n\r\n            time = '' + time;\r\n            splittedStr = time.split('.');\r\n            hh = convertStr(splittedStr[0], 0);\r\n            mm = convertStr(splittedStr[1], 1);\r\n            return hh + ':' + mm;\r\n        }\r\n\r\n        return {\r\n            getTime: getTime\r\n        };\r\n    });","/**\r\n * Created by AlexS on 16.08.2015.\r\n */\r\nangular\r\n    .module('singlePageApplication')\r\n    .factory('TasksService', function ($http) {\r\n        function getAllTasks () {\r\n            return $http.get('tasks.json');\r\n        }\r\n\r\n        return {\r\n            getAllTasks: getAllTasks\r\n        };\r\n    });","/**\r\n * Created by AlexS on 15.08.2015.\r\n */\r\nangular.module('singlePageApplication')\r\n    .controller('TaskPageCtrl', function ($scope, $http,\r\n                                          $route, TasksService) {\r\n\r\n        $scope.currentTask = null;\r\n\r\n        (function init() {\r\n            TasksService.getAllTasks()\r\n                .then(function (data) {\r\n                    $scope.currentTask = _.find(data.data, function (task) {\r\n                        return task.id === +$route.current.pathParams.taskId;\r\n                    });\r\n                });\r\n        })();\r\n    });\r\n"]}